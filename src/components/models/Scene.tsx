/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { GroupProps } from "@react-three/fiber";
import { useEffect, useRef } from "react";
import * as THREE from 'three';
import useAvatarTextures from "../../hooks/useAvatarTextures";

const Scene = (props: GroupProps) => {
    const group = useRef(null);

    // @ts-ignore
    const { nodes, materials, animations } = useGLTF("/models/scene/natural-habitat.glb");

    const { actions, names } = useAnimations(animations, group);

    useEffect(() => {
        if (actions) {
            actions[names[0]]?.reset()?.fadeIn(0.5).play();

            return () => {
                actions[names[0]]?.fadeOut(0.5).stop();
            }
        }
    }, [])

    const textures = useAvatarTextures();

    const AVATAR_COLORS = {
        skin: '#C0A187',
        hair: '#424242',
        glasses: '#22223b',
        hoodie: '#4361ee',
        pants: '#343a40',
        shoes: '#fafafa'
    }

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <mesh
                    name="Node"
                    castShadow
                    receiveShadow
                    geometry={nodes.Node.geometry}
                    material={materials.lambert2SG}
                    position={[0, 0.273, 0.047]}
                    rotation={[0, 0.314, 0]}
                    scale={[0.16, 0.137, 0.16]}
                />
                <group
                    name="Node001"
                    position={[0.076, 0.587, 0.788]}
                    scale={[0.846, 0.846, 0.598]}
                >
                    <mesh
                        name="Node-Mesh002"
                        castShadow
                        receiveShadow
                        geometry={nodes["Node-Mesh002"].geometry}
                        material={materials["mat20.001"]}
                    />
                    <mesh
                        name="Node-Mesh002_1"
                        castShadow
                        receiveShadow
                        geometry={nodes["Node-Mesh002_1"].geometry}
                        material={materials["mat15.001"]}
                    />
                </group>
                <mesh
                    name="ComputerMouse_mesh"
                    castShadow
                    receiveShadow
                    geometry={nodes.ComputerMouse_mesh.geometry}
                    material={materials.ComputerMouse_mat1}
                    position={[-0.25, 0.695, 0.653]}
                    rotation={[0, -0.119, 0]}
                    scale={0.045}
                />
                <mesh
                    name="Laptop_mesh"
                    castShadow
                    receiveShadow
                    geometry={nodes.Laptop_mesh.geometry}
                    material={materials.Laptop_mat1}
                    position={[0.125, 0.695, 0.654]}
                    rotation={[-Math.PI, 0.021, -Math.PI]}
                    scale={0.16}
                />
                <group
                    name="Cube007_Cube006"
                    position={[0.539, 0.723, 0.802]}
                    rotation={[0, 0.243, 0]}
                    scale={0.225}
                >
                    <mesh
                        name="Cube007_Cube006-Mesh"
                        castShadow
                        receiveShadow
                        geometry={nodes["Cube007_Cube006-Mesh"].geometry}
                        material={materials["Material.009"]}
                    />
                    <mesh
                        name="Cube007_Cube006-Mesh_1"
                        castShadow
                        receiveShadow
                        geometry={nodes["Cube007_Cube006-Mesh_1"].geometry}
                        material={materials["Material.006"]}
                    />
                </group>
                <mesh
                    name="iPhone"
                    castShadow
                    receiveShadow
                    geometry={nodes.iPhone.geometry}
                    material={materials.Mat}
                    position={[0.575, 0.744, 0.805]}
                    rotation={[0, -1.442, 0]}
                    scale={-0.003}
                />
                <mesh
                    name="FiddleleafFigPottedPlant_mesh"
                    castShadow
                    receiveShadow
                    geometry={nodes.FiddleleafFigPottedPlant_mesh.geometry}
                    material={materials.FiddleleafFigPottedPlant_mat}
                    position={[-1.135, 0, 0.427]}
                    scale={0.197}
                />
                <group
                    name="Light"
                    position={[4.076, 5.904, -1.005]}
                    rotation={[1.89, 0.881, -2.045]}
                />
                <group
                    name="Camera"
                    position={[7.359, 4.958, 6.926]}
                    rotation={[1.242, 0.33, -0.76]}
                />
                <group
                    name="Camera001"
                    position={[7.359, 4.958, 6.926]}
                    rotation={[1.242, 0.33, -0.76]}
                />
                <group name="Jack">
                    <skinnedMesh
                        name="EyeLeft"
                        geometry={nodes.EyeLeft.geometry}
                        material={new THREE.MeshStandardMaterial({ map: textures[0] })}
                        skeleton={nodes.EyeLeft.skeleton}
                        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="EyeRight"
                        geometry={nodes.EyeRight.geometry}
                        material={new THREE.MeshStandardMaterial({ map: textures[0] })}
                        skeleton={nodes.EyeRight.skeleton}
                        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="Wolf3D_Body"
                        geometry={nodes.Wolf3D_Body.geometry}
                        material={new THREE.MeshStandardMaterial({ normalMap: textures[4], color: AVATAR_COLORS.skin })}
                        skeleton={nodes.Wolf3D_Body.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Glasses"
                        geometry={nodes.Wolf3D_Glasses.geometry}
                        material={new THREE.MeshStandardMaterial({ map: textures[2], color: AVATAR_COLORS.glasses })}
                        skeleton={nodes.Wolf3D_Glasses.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Hair"
                        geometry={nodes.Wolf3D_Hair.geometry}
                        material={new THREE.MeshStandardMaterial({ bumpMap: textures[3], color: AVATAR_COLORS.hair })}
                        skeleton={nodes.Wolf3D_Hair.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Head"
                        geometry={nodes.Wolf3D_Head.geometry}
                        material={new THREE.MeshStandardMaterial({ color: AVATAR_COLORS.skin })}
                        skeleton={nodes.Wolf3D_Head.skeleton}
                        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
                        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Bottom"
                        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                        material={new THREE.MeshStandardMaterial({ displacementMap: textures[5], displacementScale: 0.01, normalMap: textures[6], map: textures[7], color: AVATAR_COLORS.pants })}
                        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Footwear"
                        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                        material={new THREE.MeshStandardMaterial({ normalMap: textures[9], color: AVATAR_COLORS.shoes })}
                        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Top"
                        geometry={nodes.Wolf3D_Outfit_Top.geometry}
                        material={new THREE.MeshStandardMaterial({ color: AVATAR_COLORS.hoodie })}
                        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Teeth"
                        geometry={nodes.Wolf3D_Teeth.geometry}
                        material={new THREE.MeshStandardMaterial({ map: textures[1] })}
                        skeleton={nodes.Wolf3D_Teeth.skeleton}
                        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
                        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
                    />
                    <primitive object={nodes.Hips} />
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/models/scene/natural-habitat.glb");

export default Scene;